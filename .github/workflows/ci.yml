name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  macos-15:
    strategy:
      matrix:
        config:
          - debug
          - release
        xcode:
          - '16.0'
    name: macOS 15
    runs-on: macos-15
    steps:
    - uses: actions/checkout@v4
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
    - name: Run tests
      run: make test-${{ matrix.config }}

  macos-14:
    strategy:
      matrix:
        config:
          - debug
          - release
        xcode:
          - 15.2
          - 15.4
    name: macOS 14
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
    - name: Run tests
      run: make test-${{ matrix.config }}

  library-evolution:
    name: Library evolution
    runs-on: macos-15
    steps:
    - uses: actions/checkout@v4
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_16.0.app
    - name: Run tests
      run: make build-for-library-evolution

  examples:
    strategy:
      matrix:
        config:
          - Debug
          - Release
        xcode:
          - '16.0'
    name: Examples
    runs-on: macos-15
    steps:
    - uses: actions/checkout@v4
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
    - name: Run tests
      run: make CONFIG=${{ matrix.config }} test-examples

  linux:
    strategy:
      matrix:
        config:
          - debug
          - release
    name: Linux
    runs-on: ubuntu-latest
    container: swift:5.10
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: apt-get update && apt-get install -y build-essential libcurl4-openssl-dev
      - name: Run tests
        run: make test-${{ matrix.config }}
      - name: Build for static-stdlib
        run: make CONFIG=${{ matrix.config }} build-for-static-stdlib

  wasm:
    name: SwiftWasm
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - wasm-5.9.2-RELEASE
          - wasm-5.10.0-RELEASE
    steps:
      - name: Cache toolchains
        uses: actions/cache@v3
        with:
          path: ~/Library/Developer/Toolchains
          key: ${{ matrix.toolchain }}
      - uses: actions/checkout@v4
      - uses: bytecodealliance/actions/wasmtime/setup@v1
      - uses: swiftwasm/setup-swiftwasm@v1
        with:
          swift-version: ${{ matrix.toolchain }}
      - name: Build tests
        run: swift build --triple wasm32-unknown-wasi --build-tests -Xlinker -z -Xlinker stack-size=$((1024 * 1024))
      - name: Run tests
        run: wasmtime .build/debug/xctest-dynamic-overlayPackageTests.wasm

  windows:
    name: Windows
    strategy:
      matrix:
        os: [windows-latest]
        config:
          - debug
          - release
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: compnerd/gha-setup-swift@main
        with:
          branch: swift-5.10-release
          tag: 5.10-RELEASE
      - name: Set long paths
        run: git config --system core.longpaths true
      - uses: actions/checkout@v4
      - name: Build
        run: swift build -c ${{ matrix.config }}
      - name: Run tests (debug only)
        run: swift test

  android:
    name: Android (Swift 6.0.2)
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install Swift
        uses: tayloraswift/swift-install-action@master
        with:
          swift-prefix: swift-6.0.2-release/ubuntu2204/swift-6.0.2-RELEASE
          swift-id: swift-6.0.2-RELEASE-ubuntu22.04
      - name: Check Swift
        run: swift --version
      - name: Install Android SDK
        run:
          swift sdk install https://github.com/finagolfin/swift-android-sdk/releases/download/6.0.2/swift-6.0.2-RELEASE-android-24-0.1.artifactbundle.tar.gz --checksum d75615eac3e614131133c7cc2076b0b8fb4327d89dce802c25cd53e75e1881f4
      - name: Check Android SDK
        run:
          swift sdk configure --show-configuration swift-6.0.2-RELEASE-android-24-0.1 x86_64-unknown-linux-android24
      - name: Build Tests
        run:
          swift build --build-tests --swift-sdk x86_64-unknown-linux-android24 -Xswiftc -Xclang-linker -Xswiftc -fuse-ld=lld
      - name: Prepare Android Emulator Test Script
        run: |
          mkdir pack
          cp .build/x86_64-unknown-linux-android24/debug/xctest-dynamic-overlayPackageTests.xctest pack
          
          cp /home/runner/.config/swiftpm/swift-sdks/swift-6.0.2-RELEASE-android-24-0.1.artifactbundle/swift-6.0.2-release-android-24-sdk/android-27c-sysroot/usr/lib/x86_64-linux-android/24/lib*.so pack
          rm pack/lib{c,dl,log,m,z}.so

          set -x
          cat > ~/test-toolchain.sh << EOF
          adb push pack /data/local/tmp
          adb shell /data/local/tmp/pack/xctest-dynamic-overlayPackageTests.xctest
          EOF
          
          chmod +x ~/test-toolchain.sh
      - name: Run Tests on Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          arch: x86_64
          script: ~/test-toolchain.sh